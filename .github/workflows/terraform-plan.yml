name: PR Terraform Plan

on: [pull_request]

permissions:
  contents: read
  pull-requests: write

jobs:
  changed-files:
    name: Get changed terraform directories
    runs-on: ubuntu-latest
    outputs:
      module-change: ${{ steps.set-module-change.outputs.module_change }}
      project-directory: ${{ steps.set-project-directory.outputs.directory }}
      environment-directory: ${{ steps.set-environment-directory.outputs.directory }}
      has-project-change: ${{ steps.set-project-directory.outputs.has_project_change }}
      has-environment-change: ${{ steps.set-environment-directory.outputs.has_environment_change }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: dorny/paths-filter@v2
        with:
          filters: |
            module-change:
              - 'terraform-modules/**'
            project-change:
              - 'terraform-incubator/**/project/*.tf'
            environment-change:
              - 'terraform-incubator/**/!(project)/*.tf'
          list-files: json

      - name: List all changed files
        run: |
          echo 'module-change: ${{ steps.changed-files.outputs.module-change_files }}'
          echo 'project-change: ${{ steps.changed-files.outputs.project-change_files }}'
          echo 'environment-change: ${{ steps.changed-files.outputs.environment-change_files }}'

      - name: Set module change output
        id: set-module-change
        if: ${{ fromJson(steps.changed-files.outputs.module-change_files).length > 0 }}
        run: |
          echo "::set-output name=module_change::true"
          echo "Set module_change to true"

      - name: Debug module change
        if: ${{ steps.set-module-change.outputs.module_change == 'true' }}
        run: echo "module_change is set to true"

      - name: Set project directory output
        id: set-project-directory
        if: ${{ fromJson(steps.changed-files.outputs.project-change_files).length > 0 }}
        run: |
          directory=$(dirname "${{ fromJson(steps.changed-files.outputs.project-change_files)[0] }}")
          echo "Extracted Directory: $directory"
          echo "::set-output name=directory::$directory"
          echo "::set-output name=has_project_change::true"
          echo "Set project directory to $directory and has_project_change to true"

      - name: Debug project directory
        if: ${{ steps.set-project-directory.outputs.has_project_change == 'true' }}
        run: echo "has_project_change is set to true with directory ${{ steps.set-project-directory.outputs.directory }}"

      - name: Set environment directory output
        id: set-environment-directory
        if: ${{ fromJson(steps.changed-files.outputs.environment-change_files).length > 0 }}
        run: |
          directory=$(dirname "${{ fromJson(steps.changed-files.outputs.environment-change_files)[0] }}")
          echo "Extracted Directory: $directory"
          echo "::set-output name=directory::$directory"
          echo "::set-output name=has_environment_change::true"
          echo "Set environment directory to $directory and has_environment_change to true"

      - name: Debug environment directory
        if: ${{ steps.set-environment-directory.outputs.has_environment_change == 'true' }}
        run: echo "has_environment_change is set to true with directory ${{ steps.set-environment-directory.outputs.directory }}"

  debug:
    runs-on: ubuntu-latest
    needs: [changed-files]
    steps:
      - name: Print outputs
        run: |
          echo "module-change: ${{ needs.changed-files.outputs.module-change }}"
          echo "project-directory: ${{ needs.changed-files.outputs.project-directory }}"
          echo "environment-directory: ${{ needs.changed-files.outputs.environment-directory }}"
          echo "has-project-change: ${{ needs.changed-files.outputs.has-project-change }}"
          echo "has-environment-change: ${{ needs.changed-files.outputs.has-environment-change }}"

  plan-environment:
    runs-on: ubuntu-latest
    name: Terraform plan - Environment changes
    needs: [changed-files, debug]
    if: ${{ needs.changed-files.outputs.has-environment-change == 'true' }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.INCUBATOR_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.INCUBATOR_AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: terraform plan
        uses: dflook/terraform-plan@v1
        with:
          path: ${{ needs.changed-files.outputs.environment-directory }}

  plan-project:
    runs-on: ubuntu-latest
    name: Terraform plan - Project changes
    needs: [changed-files, debug]
    if: ${{ needs.changed-files.outputs.has-project-change == 'true' && needs.changed-files.outputs.has-environment-change != 'true' }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.INCUBATOR_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.INCUBATOR_AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: terraform plan
        uses: dflook/terraform-plan@v1
        with:
          path: ${{ needs.changed-files.outputs.project-directory }}

  skip-module:
    runs-on: ubuntu-latest
    name: Skip Terraform plan for module changes only
    needs: [changed-files, debug]
    if: ${{ needs.changed-files.outputs.module-change == 'true' && needs.changed-files.outputs.has-project-change != 'true' && needs.changed-files.outputs.has-environment-change != 'true' }}
    steps:
      - name: Skip module changes
        run: echo "Skipping Terraform plan for module changes only."
